import os
import requests
from bs4 import BeautifulSoup
import re
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext
from telegram import ParseMode

# Resmi Gazete URL'si
URL = "https://www.resmigazete.gov.tr/"

# Anahtar kelimeler
KEYWORDS = [
    "BasÄ±n Ä°ÅŸ Kanunu",
    "YayÄ±n Hizmetleri Usul ve EsaslarÄ±",
    "Resmi Ä°lan ve Reklam",
    "Temiz Enerji ve Enerji",
    "Ä°ÅŸ Kanunu",
    "Anayasa Mahkemesi",
    "Radyo ve Televizyon Ãœst Kurulu",
    "Ticaret Kanunu",
]

# Telegram bot token ve chat ID (GitHub Secrets Ã¼zerinden alÄ±nacak)
BOT_TOKEN = os.getenv("BOT_TOKEN")

def extract_sentences_with_keywords(content, keywords):
    """Ä°Ã§eriÄŸi cÃ¼mlelere ayÄ±rÄ±r ve anahtar kelimeleri iÃ§eren cÃ¼mleleri dÃ¶ndÃ¼rÃ¼r."""
    sentences = re.split(r'(?<=[.!?]) +', content)  # Nokta, Ã¼nlem ve soru iÅŸaretinden sonra bÃ¶lerek cÃ¼mlelere ayÄ±rÄ±r
    matching_sentences = [
        sentence for sentence in sentences
        if any(keyword.lower() in sentence.lower() for keyword in keywords)
    ]
    return matching_sentences

def check_resmi_gazete():
    """Resmi Gazete iÃ§eriÄŸini kontrol eder ve eÅŸleÅŸen cÃ¼mleleri dÃ¶ndÃ¼rÃ¼r."""
    try:
        print("Resmi Gazete'den iÃ§erik Ã§ekiliyor...")
        response = requests.get(URL, timeout=10)
        response.raise_for_status()  # HTTP hata kontrolÃ¼
        soup = BeautifulSoup(response.text, "html.parser")
        content = soup.get_text()  # HTML iÃ§eriÄŸini dÃ¼z metin olarak alÄ±r
        print("Ä°Ã§erik baÅŸarÄ±yla Ã§ekildi.")
        
        # Anahtar kelimeleri iÃ§eren cÃ¼mleleri bul
        matching_sentences = extract_sentences_with_keywords(content, KEYWORDS)
        return matching_sentences
    except requests.exceptions.RequestException as e:
        print(f"BaÄŸlantÄ± hatasÄ±: {e}")
        return []

def send_telegram_message(update: Update, context: CallbackContext, sentences):
    """EÅŸleÅŸen cÃ¼mleleri Telegram Ã¼zerinden gÃ¶nderir."""
    if not sentences:
        update.message.reply_text("ğŸ“„ <b>Resmi Gazete GÃ¼ncellemesi</b>\n\nHiÃ§bir eÅŸleÅŸen cÃ¼mle bulunamadÄ±.")
        return

    message = "ğŸ“„ <b>Resmi Gazete GÃ¼ncellemesi</b>\n\n"
    message += "\n".join([f"- {sentence}" for sentence in sentences])
    update.message.reply_text(message, parse_mode=ParseMode.HTML)

def start(update: Update, context: CallbackContext):
    """Bot baÅŸladÄ±ÄŸÄ±nda Ã§alÄ±ÅŸacak fonksiyon."""
    update.message.reply_text("Merhaba! Resmi Gazete'yi taramak iÃ§in /scan komutunu kullanabilirsiniz.")

def scan(update: Update, context: CallbackContext):
    """/scan komutunu iÅŸleyen fonksiyon."""
    update.message.reply_text("Resmi Gazete taramasÄ± baÅŸlatÄ±lÄ±yor... LÃ¼tfen bekleyin.")
    matching_sentences = check_resmi_gazete()
    send_telegram_message(update, context, matching_sentences)

def main():
    """Telegram botunun Ã§alÄ±ÅŸtÄ±ÄŸÄ± ana fonksiyon."""
    updater = Updater(BOT_TOKEN)

    # Komutlar
    updater.dispatcher.add_handler(CommandHandler("start", start))  # /start komutu
    updater.dispatcher.add_handler(CommandHandler("scan", scan))    # /scan komutu

    # Botu Ã§alÄ±ÅŸtÄ±r
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
